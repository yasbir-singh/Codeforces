// u r a fuck boi remember this.
 
#include<bits/stdc++.h>
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
 
#define int long long
#define nl "\n"
#define pi 2*acos(0.0)
#define setmin(x) memset((x),-1,sizeof((x)))
 //-------------------------------------------------------------solution starts-----------------------------------------------------------------------------
void solve(){
    int n, m=INT_MAX, a[200005], mx=0, pm;                                 // m = minimum, mx = maximum, pm = position of maximum.
    cin >> n;
    for(int i=0; i<n; i++){
        cin >> a[i];
        a[i+n] = a[i];
        if(m>a[i])m = a[i];
        if(mx<a[i]){
            mx = a[i];
            pm = i;
        }
    }                                                                     // we start form first maximum and find min then from min chk for next "n" elements
                                                                          // chk if thid id not decending or not.
    if(pm==n-1)pm=0;
    int flag=0, p=-1;
    for(int i=pm; i<2*n; i++){
        if(a[i]==m){
            int t=n;
            t--;
            for(int x=i+1; x<2*n; x++){
                if(a[x]>=a[x-1])t--;
                else break;
                if(t==0){
                    flag=1;
                    p=i;
                    break;
                }
            }
            break;
        }
    }
    if(flag==0){
        cout << "-1";
    } else {
        p=n-p;
        cout << p%n;
    }
    
}
//-------------------------------------------------------------solution starts-----------------------------------------------------------------------------
signed main(){
    #ifdef LOCAL_MACHINE
        freopen("input.txt", "rt", stdin);
        freopen("output.txt", "wt", stdout);
    #endif
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int t=1;
    //cin >> t;
    while(t--){
        solve();
    }
    return 0;
}
